#!/bin/sh

test_fail_raw () {
	if output=$(echo "$1" "$2" "$3" | $APP 2>/dev/null); then
		echo "Test $1 $2 $3 must fail"
		exit 1
	else
		test -z "$output"
	fi
}

test_success_raw () {
	output=$(echo "$1" "$2" "$3" | $APP)
	test "$output" = "$4"
}

test_success () {
	test_success_raw  "$1" "$2" "$3" "$4"
        test_success_raw  "$1" "$3" "$2" "$4"
        test_success_raw  "$3" "$1" "$2" "$4"
        test_success_raw  "$3" "$2" "$1" "$4"
        test_success_raw  "$2" "$3" "$1" "$4"
        test_success_raw  "$2" "$1" "$3" "$4"
}

test_fail () {
        test_fail_raw  "$1" "$2" "$3"
        test_fail_raw  "$1" "$3" "$2"
        test_fail_raw  "$3" "$1" "$2"
        test_fail_raw  "$3" "$2" "$1"
        test_fail_raw  "$2" "$3" "$1"
        test_fail_raw  "$2" "$1" "$3"
}

APP="$1"

# включаем режиб в bash для отлова ошибок, 
# что является противоположностью поведения оболочки по умолчанию,
# которое должно игнорировать ошибки в скриптах. 
#
# set -e останавливает выполнение script,
# если в команде или конвейере есть ошибка
set -e


#--------------------------
# tests result
#--------------------------

# тест значений > 0
test_fail_raw 0 0 0
# тест на проверку истиности треугольника
test_fail 1 1 100
#----------------------
test_success_raw 4 5 6 "Обычный треугольник"
#test_success_raw 10 10 5 "Равнобедренный треугольник"
test_success_raw 1 1 1 "Равносторонний треугольник"
test_success_raw 100 100 100 "Равносторонний треугольник"
test_success_raw 10 10 5 "Равнобедренный треугольник"
test_success_raw 3 4 5 "Обычный треугольник"

echo "Все тесты успешно пройдены!"
